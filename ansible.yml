---
- hosts: test # AWS
  become: yes

  tasks:
    - name: Update 
      command: apt update -y

    - name: Install mysql
      command: apt install mysql-server
      register: mysql

    - debug: msg:"{{ mysql.stdout }}"

    - name: Install pip3
      command: apt install python3-pip -y 

    - name: Update 
      command: apt update -y

    - name: Install docker-py
      command: pip3 install docker-py
      register: docker_py

    - debug: msg:"{{ docker_py.stdout }}"

    - name: Update
      command: apt update -y

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update
      command: apt update -y

    - name: Install Docker
      command: apt install docker-ce docker-ce-cli containerd.io -y
      register: docker

    - debug: msg:"{{ docker.stdout }}"
    
    - name: Start docker
      command: service docker start
      register: docker

    - debug: msg:"{{ docker.stdout }}"

    - name: Install docker-compose
      remote_user: ubuntu
      get_url: 
        url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: docker-compose.yml
        dest: /root
        owner: root
        group: root
        mode: '0644'

    - name:
      command: docker-compose -f docker-compose.yml up -d

    - name: Start docker-compose
      command: docker-compose start
    